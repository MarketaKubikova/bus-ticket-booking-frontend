/* tslint:disable */
/* eslint-disable */
/**
 * Bus Ticket Booking API
 * API for managing bus ticket booking application
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * Response object for reservation details
 * @export
 * @interface ReservationResponse
 */
export interface ReservationResponse {
    /**
     * Origin of the trip
     * @type {string}
     * @memberof ReservationResponse
     */
    origin: string;
    /**
     * Destination of the trip
     * @type {string}
     * @memberof ReservationResponse
     */
    destination: string;
    /**
     * Departure date and time of the trip
     * @type {Date}
     * @memberof ReservationResponse
     */
    departureDateTime: Date;
    /**
     * Seat number for the reservation
     * @type {number}
     * @memberof ReservationResponse
     */
    seatNumber: number;
    /**
     * Email address of the passenger
     * @type {string}
     * @memberof ReservationResponse
     */
    passengerEmail: string;
    /**
     * Status of the reservation
     * @type {string}
     * @memberof ReservationResponse
     */
    status: ReservationResponseStatusEnum;
    /**
     * Price of the reservation in CZK
     * @type {number}
     * @memberof ReservationResponse
     */
    priceCzk: number;
    /**
     * Tariff details for the reservation
     * @type {string}
     * @memberof ReservationResponse
     */
    tariff: ReservationResponseTariffEnum;
}


/**
 * @export
 */
export const ReservationResponseStatusEnum = {
    Reserved: 'RESERVED',
    Paid: 'PAID',
    Canceled: 'CANCELED',
    Expired: 'EXPIRED'
} as const;
export type ReservationResponseStatusEnum = typeof ReservationResponseStatusEnum[keyof typeof ReservationResponseStatusEnum];

/**
 * @export
 */
export const ReservationResponseTariffEnum = {
    Adult: 'ADULT',
    Child: 'CHILD',
    Student: 'STUDENT',
    Senior: 'SENIOR'
} as const;
export type ReservationResponseTariffEnum = typeof ReservationResponseTariffEnum[keyof typeof ReservationResponseTariffEnum];


/**
 * Check if a given object implements the ReservationResponse interface.
 */
export function instanceOfReservationResponse(value: object): value is ReservationResponse {
    if (!('origin' in value) || value['origin'] === undefined) return false;
    if (!('destination' in value) || value['destination'] === undefined) return false;
    if (!('departureDateTime' in value) || value['departureDateTime'] === undefined) return false;
    if (!('seatNumber' in value) || value['seatNumber'] === undefined) return false;
    if (!('passengerEmail' in value) || value['passengerEmail'] === undefined) return false;
    if (!('status' in value) || value['status'] === undefined) return false;
    if (!('priceCzk' in value) || value['priceCzk'] === undefined) return false;
    if (!('tariff' in value) || value['tariff'] === undefined) return false;
    return true;
}

export function ReservationResponseFromJSON(json: any): ReservationResponse {
    return ReservationResponseFromJSONTyped(json, false);
}

export function ReservationResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): ReservationResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'origin': json['origin'],
        'destination': json['destination'],
        'departureDateTime': (new Date(json['departureDateTime'])),
        'seatNumber': json['seatNumber'],
        'passengerEmail': json['passengerEmail'],
        'status': json['status'],
        'priceCzk': json['priceCzk'],
        'tariff': json['tariff'],
    };
}

export function ReservationResponseToJSON(json: any): ReservationResponse {
    return ReservationResponseToJSONTyped(json, false);
}

export function ReservationResponseToJSONTyped(value?: ReservationResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'origin': value['origin'],
        'destination': value['destination'],
        'departureDateTime': ((value['departureDateTime']).toISOString()),
        'seatNumber': value['seatNumber'],
        'passengerEmail': value['passengerEmail'],
        'status': value['status'],
        'priceCzk': value['priceCzk'],
        'tariff': value['tariff'],
    };
}

