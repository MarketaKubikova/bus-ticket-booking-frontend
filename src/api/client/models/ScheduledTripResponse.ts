/* tslint:disable */
/* eslint-disable */
/**
 * Bus Ticket Booking API
 * API for managing bus ticket booking application
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * Response object for scheduled trip details
 * @export
 * @interface ScheduledTripResponse
 */
export interface ScheduledTripResponse {
    /**
     * Unique identifier for the bus
     * @type {string}
     * @memberof ScheduledTripResponse
     */
    busNumber: string;
    /**
     * Origin of the trip
     * @type {string}
     * @memberof ScheduledTripResponse
     */
    origin: string;
    /**
     * Destination of the trip
     * @type {string}
     * @memberof ScheduledTripResponse
     */
    destination: string;
    /**
     * Departure date and time of the trip
     * @type {Date}
     * @memberof ScheduledTripResponse
     */
    departureDateTime: Date;
    /**
     * Arrival date and time of the trip
     * @type {Date}
     * @memberof ScheduledTripResponse
     */
    arrivalDateTime: Date;
    /**
     * Number of available seats for the trip
     * @type {number}
     * @memberof ScheduledTripResponse
     */
    availableSeats: number;
    /**
     * Price of the trip in CZK
     * @type {number}
     * @memberof ScheduledTripResponse
     */
    priceCzk: number;
}

/**
 * Check if a given object implements the ScheduledTripResponse interface.
 */
export function instanceOfScheduledTripResponse(value: object): value is ScheduledTripResponse {
    if (!('busNumber' in value) || value['busNumber'] === undefined) return false;
    if (!('origin' in value) || value['origin'] === undefined) return false;
    if (!('destination' in value) || value['destination'] === undefined) return false;
    if (!('departureDateTime' in value) || value['departureDateTime'] === undefined) return false;
    if (!('arrivalDateTime' in value) || value['arrivalDateTime'] === undefined) return false;
    if (!('availableSeats' in value) || value['availableSeats'] === undefined) return false;
    if (!('priceCzk' in value) || value['priceCzk'] === undefined) return false;
    return true;
}

export function ScheduledTripResponseFromJSON(json: any): ScheduledTripResponse {
    return ScheduledTripResponseFromJSONTyped(json, false);
}

export function ScheduledTripResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): ScheduledTripResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'busNumber': json['busNumber'],
        'origin': json['origin'],
        'destination': json['destination'],
        'departureDateTime': (new Date(json['departureDateTime'])),
        'arrivalDateTime': (new Date(json['arrivalDateTime'])),
        'availableSeats': json['availableSeats'],
        'priceCzk': json['priceCzk'],
    };
}

export function ScheduledTripResponseToJSON(json: any): ScheduledTripResponse {
    return ScheduledTripResponseToJSONTyped(json, false);
}

export function ScheduledTripResponseToJSONTyped(value?: ScheduledTripResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'busNumber': value['busNumber'],
        'origin': value['origin'],
        'destination': value['destination'],
        'departureDateTime': ((value['departureDateTime']).toISOString()),
        'arrivalDateTime': ((value['arrivalDateTime']).toISOString()),
        'availableSeats': value['availableSeats'],
        'priceCzk': value['priceCzk'],
    };
}

